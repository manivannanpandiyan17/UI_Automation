version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    
    working_directory: ~/UI_Automation # directory where steps will run

    docker: # run the steps with Docker
      - image: circleci/openjdk:8-jdk-stretch # ...with this image as the primary container; this is where all `steps` will run

    steps: # a collection of executable commands

      - checkout # check out source code to working directory

      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: UI_Automation-{{ checksum "pom.xml" }}
      
      - run: mvn dependency:go-offline # gets the project dependencies
      
      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: UI_Automation-{{ checksum "pom.xml" }}
      
      - run: mvn package # run the actual tests
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/reports
            find . -type f -regex ".*html" -exec cp {} ~/test-results/reports/ \;
            find . -type f -regex ".*js" -exec cp {} ~/test-results/reports/ \;
            find . -type f -regex ".*css" -exec cp {} ~/test-results/reports/ \;
          when: always  
      - store_test_results: 
          path: ~/test-results
      
      - store_artifacts: # store  as an artifact
      # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
           #path: target/API_Automation-0.0.1-SNAPSHOT.jar
          path: ~/test-results/reports
      - store_artifacts: # store  as an artifact
      # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: target/API_Automation-0.0.1-SNAPSHOT.jar
          #path: ~/test-results/reports
